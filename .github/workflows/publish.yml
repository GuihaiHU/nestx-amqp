name: publish

on:
  push:
    branches:
      - master

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: SCM
        uses: actions/checkout@v2
      - name: Setup Node Environment
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install Dependencies and Build
        run: |
          sudo apt-get install gnupg
          which gpg
          yarn
          yarn build
      - name: Semantic Release
        run: |
          export GPG_TTY=$(tty)
          openssl aes-256-cbc -d -K $REPO_ENC_KEY -iv $REPO_ENC_IV -in .github/git_gpg_keys.enc -out /tmp/git_gpg_keys.asc -d
          chmod 600 /tmp/git_gpg_keys.asc
          gpg --batch --yes --import /tmp/git_gpg_keys.asc
          echo '/usr/bin/gpg --passphrase ${GPG_PASSPHRASE} --batch --no-tty "$@"' > /tmp/gpg-with-passphrase && chmod +x /tmp/gpg-with-passphrase
          git config gpg.program "/tmp/gpg-with-passphrase"
          git config commit.gpgsign true
          git config --global user.signingkey $GPG_KEY_ID
          yarn release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          REPO_ENC_IV: ${{ secrets.REPO_ENC_IV }}
          REPO_ENC_KEY: ${{ secrets.REPO_ENC_KEY }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_USERNAME}}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_EMAIL}}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_USERNAME}}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_EMAIL}}
